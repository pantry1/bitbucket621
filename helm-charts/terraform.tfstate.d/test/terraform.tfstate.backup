{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 551,
  "lineage": "638ece31-ddeb-ac5d-1346-4fee1f3249e0",
  "outputs": {
    "endpoint": {
      "value": "https://891A7D4592CD19583F87668DC5B5A676.gr7.ap-south-1.eks.amazonaws.com",
      "type": "string"
    },
    "kubeconfig-certificate-authority-data": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EWXhNREExTVRjd01Wb1hEVE16TURZd056QTFNVGN3TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTJQCndIVElEckZncWczZy9KeVgxbUtoQzlzOHdONGJOeThheHNidlpEdm1YKzRGSTUwOTRTU1oyVGNZTSt2M3ozdlIKTzFvT29kcHRLa25ySVpicTlNclVQM0hmL2t1N2pnVlVKUE85dFRHZVFXb243NGpPYnh3Y3pack41a3pBNWkrYwp5blFzOWZZamc4VCtLbkdCZmltcHJoaXVYQThSK2g4anR6RElCb3pYbW8wNlhKYUpCNm5lY213U0lNRThTalhaCmZHQ3RTUHJ0bm44S1hHTEV1amo5bVBHdWM5S2dncWdWVllDV3RLSlRoY0hOamxDTklQNjB5RmI3cUpwNngyb1kKcDJOVENIdlU1bFRYbllTUVlENkk4Sk5SRDNUYW82aVVTZHNZeWpCWDRBU1NvanNONk8vbGxRLzZNclF4ZVBadwpQTzhzSHNwZEkyTmFKb2ZqVTVFQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPOFJyYk5zRlora2dwNUdmSnZFVVpHZS9WandNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSEpzdmNmN2VZVzl0cno4aHNMcwpkTjBxVVlCQXFNalFGTGxqWHRzN29xNUNQN1U1bmhFYzY5YW9IZEVoRjZxWk9LN1VXK3JhZ2JFMDdWZTB4a2w0CjRkaHRhK09sRFkraVJkb09mS2VjWFluSGMxa1c0TTBUWkl4ZW1XS2sweE9IdGYxdDRiQjFpQmlNblF6UVpaeFMKczhJY3VyZ09rOEhCWkN6RWl4b0tVTFpCOW5CUWtTaXQ0Q3gvNFRJQTZ0R3NXTFBXeU1YK3pXdmozQTkwQnNGZQpnMXZ4aDFiOVJLRDgvenBuWHhUQWdUWUlFWTZNL2svMkU2MTA5anR1L1F0T3dISnFhMEdlQksrVy80TDM0TTFWClNxNGIzb3JPT2MzZzhFV1FiSHZQNXhabHdSS0dWVkg3QXFZdVFSY21Pa2JHWWorS3BUSlluU0c5a1BuREF1RWwKN0s4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:ap-south-1:998516096174:cluster/testing-eks-2",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EWXhNREExTVRjd01Wb1hEVE16TURZd056QTFNVGN3TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTTJQCndIVElEckZncWczZy9KeVgxbUtoQzlzOHdONGJOeThheHNidlpEdm1YKzRGSTUwOTRTU1oyVGNZTSt2M3ozdlIKTzFvT29kcHRLa25ySVpicTlNclVQM0hmL2t1N2pnVlVKUE85dFRHZVFXb243NGpPYnh3Y3pack41a3pBNWkrYwp5blFzOWZZamc4VCtLbkdCZmltcHJoaXVYQThSK2g4anR6RElCb3pYbW8wNlhKYUpCNm5lY213U0lNRThTalhaCmZHQ3RTUHJ0bm44S1hHTEV1amo5bVBHdWM5S2dncWdWVllDV3RLSlRoY0hOamxDTklQNjB5RmI3cUpwNngyb1kKcDJOVENIdlU1bFRYbllTUVlENkk4Sk5SRDNUYW82aVVTZHNZeWpCWDRBU1NvanNONk8vbGxRLzZNclF4ZVBadwpQTzhzSHNwZEkyTmFKb2ZqVTVFQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZPOFJyYk5zRlora2dwNUdmSnZFVVpHZS9WandNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSEpzdmNmN2VZVzl0cno4aHNMcwpkTjBxVVlCQXFNalFGTGxqWHRzN29xNUNQN1U1bmhFYzY5YW9IZEVoRjZxWk9LN1VXK3JhZ2JFMDdWZTB4a2w0CjRkaHRhK09sRFkraVJkb09mS2VjWFluSGMxa1c0TTBUWkl4ZW1XS2sweE9IdGYxdDRiQjFpQmlNblF6UVpaeFMKczhJY3VyZ09rOEhCWkN6RWl4b0tVTFpCOW5CUWtTaXQ0Q3gvNFRJQTZ0R3NXTFBXeU1YK3pXdmozQTkwQnNGZQpnMXZ4aDFiOVJLRDgvenBuWHhUQWdUWUlFWTZNL2svMkU2MTA5anR1L1F0T3dISnFhMEdlQksrVy80TDM0TTFWClNxNGIzb3JPT2MzZzhFV1FiSHZQNXhabHdSS0dWVkg3QXFZdVFSY21Pa2JHWWorS3BUSlluU0c5a1BuREF1RWwKN0s4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "cluster_id": null,
            "created_at": "2023-06-10 05:11:53.723 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "endpoint": "https://891A7D4592CD19583F87668DC5B5A676.gr7.ap-south-1.eks.amazonaws.com",
            "id": "testing-eks-2",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "testing-eks-2",
            "outpost_config": [],
            "platform_version": "eks.3",
            "role_arn": "arn:aws:iam::998516096174:role/testing-eks-2-cluster-20230610051130380400000002",
            "status": "ACTIVE",
            "tags": {},
            "version": "1.26",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0db85a62a43ad9e49",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0f7a9fbea067b984d"
                ],
                "subnet_ids": [
                  "subnet-0abb056b6ac5b2e39",
                  "subnet-0d5351b7c6434ac94",
                  "subnet-0f24bd6079aa0a0d2"
                ],
                "vpc_id": "vpc-019ef4a85d2f63f0d"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "testing-eks-2",
            "name": "testing-eks-2",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUE2UTdCU1BTWEhUVktGR0Y2JTJGMjAyMzA2MTAlMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIzMDYxMFQwODQyMTlaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTM2ZDFjZmZiY2Q1Y2Y4MWM0ZjdkZWY2NDQzMTdkZDQyZWM1NGZmYjZlMDRmN2UzNDU3ZTVjNmE5ODQzN2M4OTY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "external-secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "external-secrets",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "external-secrets",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.8.3",
                "chart": "external-secrets",
                "name": "external-secrets",
                "namespace": "external-secrets",
                "revision": 2,
                "values": "{\"certController\":{\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role\"}}},\"installCRDs\":true,\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role\"}},\"webhook\":{\"port\":9443,\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role\"}}}}",
                "version": "0.8.3"
              }
            ],
            "name": "external-secrets",
            "namespace": "external-secrets",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.external-secrets.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "certController.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role"
              },
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role"
              },
              {
                "name": "webhook.port",
                "type": "",
                "value": "9443"
              },
              {
                "name": "webhook.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.8.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_eks_cluster.example",
            "data.aws_eks_cluster_auth.cluster",
            "module.secrets_manager_role.aws_iam_role.this",
            "module.secrets_manager_role.data.aws_caller_identity.current",
            "module.secrets_manager_role.data.aws_iam_policy_document.this",
            "module.secrets_manager_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "loadbalancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.5.2",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"testing-eks-2\",\"enableServiceMutatorWebhook\":false,\"image\":{\"repository\":\"public.ecr.aws/eks/aws-load-balancer-controller\",\"tag\":\"v2.5.2\"},\"region\":\"ap-south-1\",\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/load-balancer-controller-testing-eks-2-role\"},\"create\":true,\"name\":\"aws-load-balancer-controller\"},\"vpcId\":\"vpc-019ef4a85d2f63f0d\"}",
                "version": "1.5.3"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "string",
                "value": "testing-eks-2"
              },
              {
                "name": "enableServiceMutatorWebhook",
                "type": "",
                "value": "false"
              },
              {
                "name": "image.repository",
                "type": "string",
                "value": "public.ecr.aws/eks/aws-load-balancer-controller"
              },
              {
                "name": "image.tag",
                "type": "string",
                "value": "v2.5.2"
              },
              {
                "name": "region",
                "type": "string",
                "value": "ap-south-1"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "string",
                "value": "arn:aws:iam::998516096174:role/load-balancer-controller-testing-eks-2-role"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "serviceAccount.name",
                "type": "string",
                "value": "aws-load-balancer-controller"
              },
              {
                "name": "vpcId",
                "type": "string",
                "value": "vpc-019ef4a85d2f63f0d"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.5.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_eks_cluster.example",
            "data.aws_eks_cluster_auth.cluster",
            "kubectl_manifest.ingressclassparams",
            "kubectl_manifest.targetgroupbindings",
            "module.load_balancer_controller_irsa_role.aws_iam_role.this",
            "module.load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "ingressclassparams",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/ingressclassparams.elbv2.k8s.aws",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "122982032ce99d1885b5100e41c085ce8d0456042f6072b8a174fdf6f6bca815",
            "live_uid": "e6cfedc0-a712-444d-912d-a509b3ac9243",
            "name": "ingressclassparams.elbv2.k8s.aws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "e6cfedc0-a712-444d-912d-a509b3ac9243",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - description: The Ingress Group name\n          jsonPath: .spec.group.name\n          name: GROUP-NAME\n          type: string\n        - description: The AWS Load Balancer scheme\n          jsonPath: .spec.scheme\n          name: SCHEME\n          type: string\n        - description: The AWS Load Balancer ipAddressType\n          jsonPath: .spec.ipAddressType\n          name: IP-ADDRESS-TYPE\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: AGE\n          type: date\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: IngressClassParams is the Schema for the IngressClassParams API\n          properties:\n            apiVersion:\n              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n              type: string\n            kind:\n              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: IngressClassParamsSpec defines the desired state of IngressClassParams\n              properties:\n                group:\n                  description: Group defines the IngressGroup for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  properties:\n                    name:\n                      description: Name is the name of IngressGroup.\n                      type: string\n                  required:\n                    - name\n                  type: object\n                inboundCIDRs:\n                  description: InboundCIDRs specifies the CIDRs that are allowed to access the Ingresses that belong to IngressClass with this IngressClassParams.\n                  items:\n                    type: string\n                  type: array\n                ipAddressType:\n                  description: IPAddressType defines the ip address type for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  enum:\n                    - ipv4\n                    - dualstack\n                  type: string\n                loadBalancerAttributes:\n                  description: LoadBalancerAttributes define the custom attributes to LoadBalancers for all Ingress that that belong to IngressClass with this IngressClassParams.\n                  items:\n                    description: Attributes defines custom attributes on resources.\n                    properties:\n                      key:\n                        description: The key of the attribute.\n                        type: string\n                      value:\n                        description: The value of the attribute.\n                        type: string\n                    required:\n                      - key\n                      - value\n                    type: object\n                  type: array\n                namespaceSelector:\n                  description: NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams. * if absent or present but empty, it selects all namespaces.\n                  properties:\n                    matchExpressions:\n                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.\n                      items:\n                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\n                        properties:\n                          key:\n                            description: key is the label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\n                            type: string\n                          values:\n                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                          - key\n                          - operator\n                        type: object\n                      type: array\n                    matchLabels:\n                      additionalProperties:\n                        type: string\n                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                      type: object\n                  type: object\n                  x-kubernetes-map-type: atomic\n                scheme:\n                  description: Scheme defines the scheme for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  enum:\n                    - internal\n                    - internet-facing\n                  type: string\n                sslPolicy:\n                  description: SSLPolicy specifies the SSL Policy for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  type: string\n                subnets:\n                  description: Subnets defines the subnets for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  properties:\n                    ids:\n                      description: IDs specify the resource IDs of subnets. Exactly one of this or `tags` must be specified.\n                      items:\n                        description: SubnetID specifies a subnet ID.\n                        pattern: subnet-[0-9a-f]+\n                        type: string\n                      minItems: 1\n                      type: array\n                    tags:\n                      additionalProperties:\n                        items:\n                          type: string\n                        type: array\n                      description: Tags specifies subnets in the load balancer's VPC where each tag specified in the map key contains one of the values in the corresponding value list. Exactly one of this or `ids` must be specified.\n                      type: object\n                  type: object\n                tags:\n                  description: Tags defines list of Tags on AWS resources provisioned for Ingresses that belong to IngressClass with this IngressClassParams.\n                  items:\n                    description: Tag defines a AWS Tag on resources.\n                    properties:\n                      key:\n                        description: The key of the tag.\n                        type: string\n                      value:\n                        description: The value of the tag.\n                        type: string\n                    required:\n                      - key\n                      - value\n                    type: object\n                  type: array\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources: {}\nstatus:\n  acceptedNames:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  conditions:\n    - message: no conflicts found\n      reason: NoConflicts\n      status: \"True\"\n      type: NamesAccepted\n    - message: the initial names have been accepted\n      reason: InitialNamesAccepted\n      status: \"True\"\n      type: Established\n  storedVersions:\n    - v1beta1",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - description: The Ingress Group name\n      jsonPath: .spec.group.name\n      name: GROUP-NAME\n      type: string\n    - description: The AWS Load Balancer scheme\n      jsonPath: .spec.scheme\n      name: SCHEME\n      type: string\n    - description: The AWS Load Balancer ipAddressType\n      jsonPath: .spec.ipAddressType\n      name: IP-ADDRESS-TYPE\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: IngressClassParams is the Schema for the IngressClassParams API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: IngressClassParamsSpec defines the desired state of IngressClassParams\n            properties:\n              group:\n                description: Group defines the IngressGroup for all Ingresses that\n                  belong to IngressClass with this IngressClassParams.\n                properties:\n                  name:\n                    description: Name is the name of IngressGroup.\n                    type: string\n                required:\n                - name\n                type: object\n              inboundCIDRs:\n                description: InboundCIDRs specifies the CIDRs that are allowed to\n                  access the Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              ipAddressType:\n                description: IPAddressType defines the ip address type for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                enum:\n                - ipv4\n                - dualstack\n                type: string\n              loadBalancerAttributes:\n                description: LoadBalancerAttributes define the custom attributes to\n                  LoadBalancers for all Ingress that that belong to IngressClass with\n                  this IngressClassParams.\n                items:\n                  description: Attributes defines custom attributes on resources.\n                  properties:\n                    key:\n                      description: The key of the attribute.\n                      type: string\n                    value:\n                      description: The value of the attribute.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              namespaceSelector:\n                description: NamespaceSelector restrict the namespaces of Ingresses\n                  that are allowed to specify the IngressClass with this IngressClassParams.\n                  * if absent or present but empty, it selects all namespaces.\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: A label selector requirement is a selector that\n                        contains values, a key, and an operator that relates the key\n                        and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: operator represents a key's relationship to\n                            a set of values. Valid operators are In, NotIn, Exists\n                            and DoesNotExist.\n                          type: string\n                        values:\n                          description: values is an array of string values. If the\n                            operator is In or NotIn, the values array must be non-empty.\n                            If the operator is Exists or DoesNotExist, the values\n                            array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: matchLabels is a map of {key,value} pairs. A single\n                      {key,value} in the matchLabels map is equivalent to an element\n                      of matchExpressions, whose key field is \"key\", the operator\n                      is \"In\", and the values array contains only \"value\". The requirements\n                      are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              scheme:\n                description: Scheme defines the scheme for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                enum:\n                - internal\n                - internet-facing\n                type: string\n              sslPolicy:\n                description: SSLPolicy specifies the SSL Policy for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                type: string\n              subnets:\n                description: Subnets defines the subnets for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                properties:\n                  ids:\n                    description: IDs specify the resource IDs of subnets. Exactly\n                      one of this or `tags` must be specified.\n                    items:\n                      description: SubnetID specifies a subnet ID.\n                      pattern: subnet-[0-9a-f]+\n                      type: string\n                    minItems: 1\n                    type: array\n                  tags:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    description: Tags specifies subnets in the load balancer's VPC\n                      where each tag specified in the map key contains one of the\n                      values in the corresponding value list. Exactly one of this\n                      or `ids` must be specified.\n                    type: object\n                type: object\n              tags:\n                description: Tags defines list of Tags on AWS resources provisioned\n                  for Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  description: Tag defines a AWS Tag on resources.\n                  properties:\n                    key:\n                      description: The key of the tag.\n                      type: string\n                    value:\n                      description: The value of the tag.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\nstatus:\n  acceptedNames:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  conditions:\n  - message: no conflicts found\n    reason: NoConflicts\n    status: \"True\"\n    type: NamesAccepted\n  - message: the initial names have been accepted\n    reason: InitialNamesAccepted\n    status: \"True\"\n    type: Established\n  storedVersions:\n  - v1beta1\n",
            "yaml_incluster": "122982032ce99d1885b5100e41c085ce8d0456042f6072b8a174fdf6f6bca815"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.example",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "targetgroupbindings",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/targetgroupbindings.elbv2.k8s.aws",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "53619153c94d9b9161e2ab59174a8d5631ea2e594a803ee129ae7a6ac9d39bbd",
            "live_uid": "a61ee7f5-e2c1-4c99-91b9-654bf3d81f59",
            "name": "targetgroupbindings.elbv2.k8s.aws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a61ee7f5-e2c1-4c99-91b9-654bf3d81f59",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n    - additionalPrinterColumns:\n        - description: The Kubernetes Service's name\n          jsonPath: .spec.serviceRef.name\n          name: SERVICE-NAME\n          type: string\n        - description: The Kubernetes Service's port\n          jsonPath: .spec.serviceRef.port\n          name: SERVICE-PORT\n          type: string\n        - description: The AWS TargetGroup's TargetType\n          jsonPath: .spec.targetType\n          name: TARGET-TYPE\n          type: string\n        - description: The AWS TargetGroup's Amazon Resource Name\n          jsonPath: .spec.targetGroupARN\n          name: ARN\n          priority: 1\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: AGE\n          type: date\n      name: v1alpha1\n      schema:\n        openAPIV3Schema:\n          description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n          properties:\n            apiVersion:\n              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n              type: string\n            kind:\n              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n              properties:\n                networking:\n                  description: networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.\n                  properties:\n                    ingress:\n                      description: List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\n                      items:\n                        properties:\n                          from:\n                            description: List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.\n                            items:\n                              description: NetworkingPeer defines the source/destination peer for networking rules.\n                              properties:\n                                ipBlock:\n                                  description: IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    cidr:\n                                      description: CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.\n                                      type: string\n                                  required:\n                                    - cidr\n                                  type: object\n                                securityGroup:\n                                  description: SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    groupID:\n                                      description: GroupID is the EC2 SecurityGroupID.\n                                      type: string\n                                  required:\n                                    - groupID\n                                  type: object\n                              type: object\n                            type: array\n                          ports:\n                            description: List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.\n                            items:\n                              properties:\n                                port:\n                                  anyOf:\n                                    - type: integer\n                                    - type: string\n                                  description: The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.\n                                  x-kubernetes-int-or-string: true\n                                protocol:\n                                  description: The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.\n                                  enum:\n                                    - TCP\n                                    - UDP\n                                  type: string\n                              type: object\n                            type: array\n                        required:\n                          - from\n                          - ports\n                        type: object\n                      type: array\n                  type: object\n                serviceRef:\n                  description: serviceRef is a reference to a Kubernetes Service and ServicePort.\n                  properties:\n                    name:\n                      description: Name is the name of the Service.\n                      type: string\n                    port:\n                      anyOf:\n                        - type: integer\n                        - type: string\n                      description: Port is the port of the ServicePort.\n                      x-kubernetes-int-or-string: true\n                  required:\n                    - name\n                    - port\n                  type: object\n                targetGroupARN:\n                  description: targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.\n                  type: string\n                targetType:\n                  description: targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.\n                  enum:\n                    - instance\n                    - ip\n                  type: string\n              required:\n                - serviceRef\n                - targetGroupARN\n              type: object\n            status:\n              description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n              properties:\n                observedGeneration:\n                  description: The generation observed by the TargetGroupBinding controller.\n                  format: int64\n                  type: integer\n              type: object\n          type: object\n      served: true\n      storage: false\n      subresources:\n        status: {}\n    - additionalPrinterColumns:\n        - description: The Kubernetes Service's name\n          jsonPath: .spec.serviceRef.name\n          name: SERVICE-NAME\n          type: string\n        - description: The Kubernetes Service's port\n          jsonPath: .spec.serviceRef.port\n          name: SERVICE-PORT\n          type: string\n        - description: The AWS TargetGroup's TargetType\n          jsonPath: .spec.targetType\n          name: TARGET-TYPE\n          type: string\n        - description: The AWS TargetGroup's Amazon Resource Name\n          jsonPath: .spec.targetGroupARN\n          name: ARN\n          priority: 1\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: AGE\n          type: date\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n          properties:\n            apiVersion:\n              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n              type: string\n            kind:\n              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n              properties:\n                ipAddressType:\n                  description: ipAddressType specifies whether the target group is of type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                  enum:\n                    - ipv4\n                    - ipv6\n                  type: string\n                networking:\n                  description: networking defines the networking rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\n                  properties:\n                    ingress:\n                      description: List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\n                      items:\n                        description: NetworkingIngressRule defines a particular set of traffic that is allowed to access TargetGroup's targets.\n                        properties:\n                          from:\n                            description: List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.\n                            items:\n                              description: NetworkingPeer defines the source/destination peer for networking rules.\n                              properties:\n                                ipBlock:\n                                  description: IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    cidr:\n                                      description: CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.\n                                      type: string\n                                  required:\n                                    - cidr\n                                  type: object\n                                securityGroup:\n                                  description: SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    groupID:\n                                      description: GroupID is the EC2 SecurityGroupID.\n                                      type: string\n                                  required:\n                                    - groupID\n                                  type: object\n                              type: object\n                            type: array\n                          ports:\n                            description: List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.\n                            items:\n                              description: NetworkingPort defines the port and protocol for networking rules.\n                              properties:\n                                port:\n                                  anyOf:\n                                    - type: integer\n                                    - type: string\n                                  description: The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.\n                                  x-kubernetes-int-or-string: true\n                                protocol:\n                                  description: The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.\n                                  enum:\n                                    - TCP\n                                    - UDP\n                                  type: string\n                              type: object\n                            type: array\n                        required:\n                          - from\n                          - ports\n                        type: object\n                      type: array\n                  type: object\n                nodeSelector:\n                  description: node selector for instance type target groups to only register certain nodes\n                  properties:\n                    matchExpressions:\n                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.\n                      items:\n                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\n                        properties:\n                          key:\n                            description: key is the label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\n                            type: string\n                          values:\n                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                          - key\n                          - operator\n                        type: object\n                      type: array\n                    matchLabels:\n                      additionalProperties:\n                        type: string\n                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                      type: object\n                  type: object\n                  x-kubernetes-map-type: atomic\n                serviceRef:\n                  description: serviceRef is a reference to a Kubernetes Service and ServicePort.\n                  properties:\n                    name:\n                      description: Name is the name of the Service.\n                      type: string\n                    port:\n                      anyOf:\n                        - type: integer\n                        - type: string\n                      description: Port is the port of the ServicePort.\n                      x-kubernetes-int-or-string: true\n                  required:\n                    - name\n                    - port\n                  type: object\n                targetGroupARN:\n                  description: targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.\n                  minLength: 1\n                  type: string\n                targetType:\n                  description: targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.\n                  enum:\n                    - instance\n                    - ip\n                  type: string\n              required:\n                - serviceRef\n                - targetGroupARN\n              type: object\n            status:\n              description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n              properties:\n                observedGeneration:\n                  description: The generation observed by the TargetGroupBinding controller.\n                  format: int64\n                  type: integer\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\nstatus:\n  acceptedNames:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  conditions:\n    - message: no conflicts found\n      reason: NoConflicts\n      status: \"True\"\n      type: NamesAccepted\n    - message: the initial names have been accepted\n      reason: InitialNamesAccepted\n      status: \"True\"\n      type: Established\n  storedVersions:\n    - v1beta1",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              networking:\n                description: networking provides the networking setup for ELBV2 LoadBalancer\n                  to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      properties:\n                        from:\n                          description: List of peers which should be able to access\n                            the targets in TargetGroup. At least one NetworkingPeer\n                            should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: IPBlock defines an IPBlock peer. If specified,\n                                  none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: CIDR is the network CIDR. Both IPV4\n                                      or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: SecurityGroup defines a SecurityGroup\n                                  peer. If specified, none of the other fields can\n                                  be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: List of ports which should be made accessible\n                            on the targets in TargetGroup. If ports is empty or unspecified,\n                            it defaults to all ports with TCP.\n                          items:\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: The port which traffic must match. When\n                                  NodePort endpoints(instance TargetType) is used,\n                                  this must be a numerical port. When Port endpoints(ip\n                                  TargetType) is used, this can be either numerical\n                                  or named port on pods. if port is unspecified, it\n                                  defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            - targetGroupARN\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              ipAddressType:\n                description: ipAddressType specifies whether the target group is of\n                  type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                enum:\n                - ipv4\n                - ipv6\n                type: string\n              networking:\n                description: networking defines the networking rules to allow ELBV2\n                  LoadBalancer to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      description: NetworkingIngressRule defines a particular set\n                        of traffic that is allowed to access TargetGroup's targets.\n                      properties:\n                        from:\n                          description: List of peers which should be able to access\n                            the targets in TargetGroup. At least one NetworkingPeer\n                            should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: IPBlock defines an IPBlock peer. If specified,\n                                  none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: CIDR is the network CIDR. Both IPV4\n                                      or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: SecurityGroup defines a SecurityGroup\n                                  peer. If specified, none of the other fields can\n                                  be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: List of ports which should be made accessible\n                            on the targets in TargetGroup. If ports is empty or unspecified,\n                            it defaults to all ports with TCP.\n                          items:\n                            description: NetworkingPort defines the port and protocol\n                              for networking rules.\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: The port which traffic must match. When\n                                  NodePort endpoints(instance TargetType) is used,\n                                  this must be a numerical port. When Port endpoints(ip\n                                  TargetType) is used, this can be either numerical\n                                  or named port on pods. if port is unspecified, it\n                                  defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              nodeSelector:\n                description: node selector for instance type target groups to only\n                  register certain nodes\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: A label selector requirement is a selector that\n                        contains values, a key, and an operator that relates the key\n                        and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: operator represents a key's relationship to\n                            a set of values. Valid operators are In, NotIn, Exists\n                            and DoesNotExist.\n                          type: string\n                        values:\n                          description: values is an array of string values. If the\n                            operator is In or NotIn, the values array must be non-empty.\n                            If the operator is Exists or DoesNotExist, the values\n                            array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: matchLabels is a map of {key,value} pairs. A single\n                      {key,value} in the matchLabels map is equivalent to an element\n                      of matchExpressions, whose key field is \"key\", the operator\n                      is \"In\", and the values array contains only \"value\". The requirements\n                      are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                minLength: 1\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            - targetGroupARN\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\nstatus:\n  acceptedNames:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  conditions:\n  - message: no conflicts found\n    reason: NoConflicts\n    status: \"True\"\n    type: NamesAccepted\n  - message: the initial names have been accepted\n    reason: InitialNamesAccepted\n    status: \"True\"\n    type: Established\n  storedVersions:\n  - v1beta1\n",
            "yaml_incluster": "53619153c94d9b9161e2ab59174a8d5631ea2e594a803ee129ae7a6ac9d39bbd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.example",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3682564123",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateTargetGroup",
                      "CreateLoadBalancer"
                    ],
                    "variable": "elasticloadbalancing:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1241139844",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Mumbai)",
            "endpoint": "ec2.ap-south-1.amazonaws.com",
            "id": "ap-south-1",
            "name": "ap-south-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230610080521981400000003",
            "description": "Provides permissions for AWS Load Balancer Controller addon",
            "id": "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230610080521981400000003",
            "name": "AmazonEKS_AWS_Load_Balancer_Controller-20230610080521981400000003",
            "name_prefix": "AmazonEKS_AWS_Load_Balancer_Controller-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:CreateSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"elasticloadbalancing:AddTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6Q7BSPSXHWYK342SD",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/load-balancer-controller-testing-eks-2-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-06-10T08:05:23Z",
            "description": "",
            "force_detach_policies": true,
            "id": "load-balancer-controller-testing-eks-2-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230610080521981400000003"
            ],
            "max_session_duration": 3600,
            "name": "load-balancer-controller-testing-eks-2-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "role_last_used": [
              {
                "last_used_date": "",
                "region": ""
              }
            ],
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXOTS3NFJKG"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_eks_cluster.example",
            "module.load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "load-balancer-controller-testing-eks-2-role-20230610080524561400000005",
            "policy_arn": "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230610080521981400000003",
            "role": "load-balancer-controller-testing-eks-2-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_eks_cluster.example",
            "module.load_balancer_controller_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.load_balancer_controller_irsa_role.aws_iam_role.this",
            "module.load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "169293406",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:DescribeParameters\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": \"arn:aws:ssm:*:*:parameter/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"secretsmanager:ListSecrets\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"secretsmanager:ListSecretVersionIds\",\n        \"secretsmanager:GetSecretValue\",\n        \"secretsmanager:GetResourcePolicy\",\n        \"secretsmanager:DescribeSecret\"\n      ],\n      \"Resource\": \"arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretsStore-xanBIt\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"arn:aws:kms:*:*:key/*\"\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ssm:DescribeParameters"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ssm:GetParameter",
                  "ssm:GetParameters"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ssm:*:*:parameter/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "secretsmanager:ListSecrets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:GetResourcePolicy",
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:ListSecretVersionIds"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretsStore-xanBIt"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "kms:Decrypt"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:kms:*:*:key/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2815825289",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:sub\": \"system:serviceaccount:external-secrets:external-secrets\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:external-secrets:external-secrets"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Mumbai)",
            "endpoint": "ec2.ap-south-1.amazonaws.com",
            "id": "ap-south-1",
            "name": "ap-south-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230610080521980200000002",
            "description": "Provides permissions to for External Secrets to retrieve secrets from AWS SSM and AWS Secrets Manager",
            "id": "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230610080521980200000002",
            "name": "AmazonEKS_External_Secrets_Policy-20230610080521980200000002",
            "name_prefix": "AmazonEKS_External_Secrets_Policy-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"ssm:DescribeParameters\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ssm:GetParameters\",\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ssm:*:*:parameter/*\"},{\"Action\":\"secretsmanager:ListSecrets\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"secretsmanager:ListSecretVersionIds\",\"secretsmanager:GetSecretValue\",\"secretsmanager:GetResourcePolicy\",\"secretsmanager:DescribeSecret\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretsStore-xanBIt\"},{\"Action\":\"kms:Decrypt\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:*:*:key/*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6Q7BSPSXALX5WZ2YE",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.secrets_manager_role.data.aws_iam_policy_document.external_secrets"
          ]
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/secrets-manager-testing-eks-2-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676:sub\":\"system:serviceaccount:external-secrets:external-secrets\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/891A7D4592CD19583F87668DC5B5A676\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-06-10T08:05:23Z",
            "description": "",
            "force_detach_policies": true,
            "id": "secrets-manager-testing-eks-2-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230610080521980200000002"
            ],
            "max_session_duration": 3600,
            "name": "secrets-manager-testing-eks-2-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "role_last_used": [
              {
                "last_used_date": "",
                "region": ""
              }
            ],
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXHOUVAEOVH"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.secrets_manager_role.data.aws_iam_policy_document.this"
          ]
        }
      ]
    },
    {
      "module": "module.secrets_manager_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "secrets-manager-testing-eks-2-role-20230610080524562900000006",
            "policy_arn": "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230610080521980200000002",
            "role": "secrets-manager-testing-eks-2-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_eks_cluster.example",
            "module.secrets_manager_role.aws_iam_policy.external_secrets",
            "module.secrets_manager_role.aws_iam_role.this",
            "module.secrets_manager_role.data.aws_caller_identity.current",
            "module.secrets_manager_role.data.aws_iam_policy_document.external_secrets",
            "module.secrets_manager_role.data.aws_iam_policy_document.this",
            "module.secrets_manager_role.data.aws_partition.current"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
